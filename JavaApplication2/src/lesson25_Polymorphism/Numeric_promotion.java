
package lesson25_Polymorphism;

/** 
 * Numeriс promotion - это конвертация меньшего численного типа данных в больший, он происходит в следующих случаях:
 * 1.Если имеются 2 значения разных типов данных, java автоматически конвертирует меньший тип данных в больший
 * 2.Если одно из значений это целое, а другое дробное, то java автоматически конвертирует целочисленный тип в дробный
 * 3.Если значения типов данный byte, short и char учавствуют в арифмитических орперациях, то они передэтим конвертруются
 * в тип int, даже если в этих операциях int не учавствуте.Исключение унарные операторы, использование ++ к типу данных byte
 * не конвертирует результат оператора в int
 * После применения всех 3х правил, когда все операнды стали одного типа данных, результирующее значение, которое получается
 * после срабатывания всех операторов будет такого же типа данных, что и тип данных операнд
 * 
 * 
 */

public class Numeric_promotion {
    public static void main(String[] args) {
        int i = 5;
        long l = 10;
        System.out.println(i+l); // 15 - сначала i конвертируется в long, а потом long 5 складывается с long 10
        /**
         * i = i*l; без кастинга так не можем написать потому что i конвертирется в long, умножается и long присваивается int
         * но можем написать так :
         */
        i = (int)(i*l); // casting
        i *= l; // или можем написать так, тут casting происходит автоматически
        
        double d = 3.14;
        float а = 6.28f; // если мы не хотим кастить пишем f
        /**
         * по умолчанию если мы используем дробное число, то оно duoble by defaul и если мы будем кастить, то потеряем данные
         * так как double не помещается во float, будет narrowing.Поэтому если мы не хотим кастить, то пишем f
         */
        
        float f1 = 0*1.5f; // либо так с буквой f
        float f2 = 0*(float)1.5; // либо так иначе будет ошибка
        
    }
}
