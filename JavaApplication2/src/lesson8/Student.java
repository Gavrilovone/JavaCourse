package lesson8;

/*
  Если перед переменной стоит слово static, то это означает , что данная переменная 
  принадлежит всему классу, она является общей для всех созданных объектов, каждый 
  объект может обращаться к ней и изменять ее, но внутри себя они не хранят её. для такой 
  переменной выделяется отдельное место в памяти. Статическими могут быть и методы.
  статические элементы существуют и могут быть использованы без создания объекта класса
  очень часто используют запись static final это константы которые принадлежат всему классу,
  а не какому то объекту

  static элементы: переменные и методы не могут обращаться к instance переменным и методам(т.е без содания объекта напрямую)

  к static элементам принято обращаться через имя класса

 */
public class Student {

    String name;
    int course;
    static int count;
    int a;

    Student(String name2, int course2) {
        count++; // count будет считать количество студентов. при создании нового объекта, будет увеличиваться на 1 раз поэтому он внутри  конструктора
        name = name2;        // его дефолтное значение 0.
        course = course2;
        System.out.println("Студент № " + count + " Создан");

    }

    public static void showCount() {
        System.out.println("Всего создано студентов " + count);
    }
    
    public void showInfo(){
        System.out.println("Добро пожаловать в класс Student !!!");
    }
    
    void abc(){
    a++;
    count++; //внутри не статичного метода могу использовать статичную переменную
    }
    
    static void abcd (){
    count++;
    //a++; использовать нельзя потому , что статик метод может работать без объекта, а переменная "а" принадлежит
    // конкретному объекту и это обязывает статик метод иметь объект. поэтому компилятор выдает ошибку
    }
    
    
    public static void main(String[] args) {
        Student st1 = new Student("Иван",2);
        Student st2 = new Student("Петр",1);
        Student st3 = new Student("Елена",3);
        Student st4 = new Student("Елена",6);
        showCount();
        Student.showCount();
        st2.showCount();
    }
}
